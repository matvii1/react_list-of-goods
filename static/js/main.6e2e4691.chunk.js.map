{"version":3,"sources":["App.tsx","List.tsx","index.tsx"],"names":["SortType","List","list","map","good","goodsFromServer","App","state","isReversed","sortType","NONE","this","setState","ALPABET","LENGTH","rightOrder","goods","visibleGoods","sort","good1","good2","length","localeCompare","reverse","getReorderedGoods","className","type","classNames","onClick","alphabetSort","sortByLength","reverseArr","JSON","stringify","resetArr","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAoBKA,E,wGChBQC,EAAO,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KACrB,OACE,6BACGA,EAAKC,KAAI,SAACC,GAAD,OACR,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,SDDJC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA8CE,IAAMM,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUT,EAASU,MAHvB,kDAME,WACEC,KAAKC,SAAS,CACZH,SAAUT,EAASa,YARzB,0BAYE,WACEF,KAAKC,SAAS,CACZH,SAAUT,EAASc,WAdzB,wBAkBE,WACEH,KAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,iBApBzB,sBAwBE,WACEG,KAAKC,SAAS,CACZH,SAAUT,EAASU,KACnBF,YAAY,MA3BlB,oBA+BE,WAAU,IAAD,OACP,EAAiCG,KAAKJ,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdM,EArEH,SACLC,EADK,GAGJ,IADCP,EACF,EADEA,SAAUD,EACZ,EADYA,WAERS,EAAY,YAAOD,GAEvB,OAAQP,GACN,KAAKT,EAASc,OACZG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAME,OAASD,EAAMC,UAE9B,MAEF,KAAKrB,EAASa,QACZI,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAMG,cAAcF,MAE7B,MAEF,KAAKpB,EAASU,KACZO,EAAY,UAAOZ,GAOvB,OAJIG,GACFS,EAAaM,UAGRN,EA2CHO,CAAkBnB,EAAiB,CAAEI,WAAUD,eAEjD,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAC9B,CAAE,WAAYlB,IAAaT,EAASa,UACtCe,QAAS,kBAAM,EAAKC,gBAJtB,iCASA,wBACEH,KAAK,SACLD,UAAWE,IAAW,SAAU,aAC9B,CAAE,WAAYlB,IAAaT,EAASc,SACtCc,QAAS,kBAAM,EAAKE,gBAJtB,4BASA,wBACEJ,KAAK,SACLD,UAAWE,IAAW,SAAU,aAC9B,CAAE,YAA2B,IAAfnB,IAChBoB,QAAS,kBAAM,EAAKG,cAJtB,qBASCC,KAAKC,UAAU5B,KAAqB2B,KAAKC,UAAUlB,IAClD,wBACEW,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAM,EAAKM,YAHtB,sBAUJ,cAAC,EAAD,CAAMhC,KAAMa,WA9EpB,GAAyBoB,IAAMC,WE/D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6e2e4691.chunk.js","sourcesContent":["/* eslint-disable default-case */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { List } from './List';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => {\n        return good1.length - good2.length;\n      });\n      break;\n\n    case SortType.ALPABET:\n      visibleGoods.sort((good1, good2) => {\n        return good1.localeCompare(good2);\n      });\n      break;\n\n    case SortType.NONE:\n      visibleGoods = [...goodsFromServer];\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  alphabetSort() {\n    this.setState({\n      sortType: SortType.ALPABET,\n    });\n  }\n\n  sortByLength() {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  }\n\n  reverseArr() {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  }\n\n  resetArr() {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  }\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const rightOrder: string[]\n    = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-info',\n              { 'is-light': sortType !== SortType.ALPABET })}\n            onClick={() => this.alphabetSort()}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-success',\n              { 'is-light': sortType !== SortType.LENGTH })}\n            onClick={() => this.sortByLength()}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-warning',\n              { 'is-light': isReversed === false })}\n            onClick={() => this.reverseArr()}\n          >\n            Reverse\n          </button>\n\n          {JSON.stringify(goodsFromServer) !== JSON.stringify(rightOrder) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.resetArr()}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <List list={rightOrder} />\n      </div>\n    );\n  }\n}\n","type Props = {\n  list: string[],\n};\n\nexport const List = ({ list }: Props) => {\n  return (\n    <ul>\n      {list.map((good: string) => (\n        <li key={good} data-cy=\"Good\">{good}</li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}